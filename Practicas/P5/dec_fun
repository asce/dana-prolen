#include "dec_global"
#include "estructura_de_datos.h"

void funcionA (  int v1[3][3] , double a2 , char a3 )
 
{
 int x1 , x2 , vv , a3 ;
 void funcionB (  char b1 , int b2 )
 
{
 double xf , x2 ;
 void funcionC (  int c1 , int c2 )
 
{
 double x1 , xc ;
 {//Inicio asignacion
 x1  =  1.3 ;
}//Fin asignacion
 {//Inicio asignacion
 ve  =  (null) ;
}//Fin asignacion
 double tmp0;
tmp0 = 2.0 * vf;
 funcionA ( Ae32,tmp0,'a' );
 funcionC ( 2,2,22,4 );
 { //Sentencia IF
 int tmp1;
tmp1 = xc > x1;
 desconocido tmp2;
tmp2 = tmp1 + 2;
 //generamos tags y los introducimos en TS
 if(!tmp2) goto tag1;
 
{
 {//Inicio asignacion
 int tmp3;
tmp3 = c2 - 1;
 c2  =  tmp3 ;
}//Fin asignacion
 
}
 goto tag0;
 tag1:;
 
{
 {//Inicio asignacion
 x1  =  3.1 ;
}//Fin asignacion
 
}
 } //Fin Sentencia IF-ELSE
 tag0:;
 
}
 {//Inicio asignacion
 xf  =  15.0 ;
}//Fin asignacion
 {//Inicio asignacion
 double tmp4;
tmp4 = 1.0 - 23.0;
 double tmp5;
tmp5 = xf * tmp4;
 double tmp6;
tmp6 = tmp5 / 10.0;
 x2  =  tmp6 ;
}//Fin asignacion
 //generamos tags y los introducimos en TS
 tag3:;
 double tmp7;
tmp7 = x2 * 1.0;
 double tmp8;
tmp8 = tmp7 - xf;
 int tmp9;
tmp9 = tmp8 < 10.0;
 if(!tmp9) goto tag2;
 
{
 {//Inicio asignacion
 double tmp10;
tmp10 = x2 * xf;
 x2  =  tmp10 ;
}//Fin asignacion
 
}
 goto tag3;
 tag2:;
 
}
 void funcionD (  double d1 )
 
{
 char dato ;
 int valor ;
 void funcionE (  char e1 )
 
{
 char vc ;
 scanf("%c",&e1);
 funcionC ( 2 );
 //generar tag salida
 // Almacenar entrada en TS con el valor de expr (Entero o char)
 //generar exit_case_tag 
 //insertar exit_case_tag en TS 
 int tmp11;
tmp11 = 'a' == e1;
 if(!tmp11) goto tag5;
 {//Inicio asignacion
 vc  =  'a' ;
}//Fin asignacion
 goto tag4;
 tag5:;
 //Limpiamos TS hasta descriptor de bloque
 //generar exit_case_tag 
 //insertar exit_case_tag en TS 
 int tmp12;
tmp12 = 'b' == e1;
 if(!tmp12) goto tag6;
 {//Inicio asignacion
 vc  =  'b' ;
}//Fin asignacion
 goto tag4;
 tag6:;
 //Limpiamos TS hasta descriptor de bloque
 {//Inicio asignacion
 vc  =  'z' ;
}//Fin asignacion
 tag4:;
 
}
 {//Inicio asignacion
 dato  =  'a' ;
}//Fin asignacion
 scanf("%i",&valor);
 printf("%s","Esto ");
 printf("%i",valor);
 printf("%s"," es ");
 printf("%c",vc);
 printf("%s"," una prueba");
 { //Sentencia IF
 int tmp13;
tmp13 = ! 1;
 double tmp14;
tmp14 = 3.0 + 5.0;
 int tmp15;
tmp15 = 2.0 < tmp14;
 int tmp16;
tmp16 = tmp13 || tmp15;
 //generamos tags y los introducimos en TS
 if(!tmp16) goto tag8;
 
{
 int dato ;
 {//Inicio asignacion
 dato  =  2 ;
}//Fin asignacion
 {//Inicio asignacion
 int tmp17;
tmp17 = valor * 20;
 int tmp18;
tmp18 = tmp17 / dato;
 dato  =  tmp18 ;
}//Fin asignacion
 
}
 goto tag7;
 tag8:;
 
{
 {//Inicio asignacion
 int tmp19;
tmp19 = valor * 100;
 valor  =  tmp19 ;
}//Fin asignacion
 {//Inicio asignacion
 double tmp20;
tmp20 = d1 / 1000.0;
 d1  =  tmp20 ;
}//Fin asignacion
 
}
 } //Fin Sentencia IF-ELSE
 tag7:;
 
}
 {//Inicio asignacion
 iv[0] = 1
 ;
}//Fin asignacion
 {//Inicio asignacion
 Asignacion1DEntero((int *)iv,2,(int *)iv) ;
}//Fin asignacion
 {//Inicio asignacion
 Asignacion1DReal((double *)fv,2,(double *)fv) ;
}//Fin asignacion
 {//Inicio asignacion
 int tmp21[2][2];
Multiplicacion2DEntero((int *)im,2,2,(int *)im,2,2,(int *)tmp21);
 Asignacion2DEntero((int *)tmp21,2,2,(int *)im) ;
}//Fin asignacion
 {//Inicio asignacion
 ve  =  0 ;
}//Fin asignacion
 
}
 