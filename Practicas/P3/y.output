Estado 83 conflictos: 1 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 programa: cabecera_programa bloque

    2 cabecera_programa: MAIN

    3 bloque: inicio_de_bloque declar_de_variables_locales declar_de_subprogs sentencias fin_de_bloque

    4 inicio_de_bloque: CORIZ

    5 fin_de_bloque: CORDER

    6 declar_de_subprogs: declar_de_subprogs declar_subprog
    7                   | /* vacío */

    8 declar_subprog: cabecera_subprograma bloque

    9 declar_de_variables_locales: marca_ini_declar_variables variables_locales marca_fin_declar_variables
   10                            | /* vacío */

   11 marca_ini_declar_variables: INICIOV

   12 marca_fin_declar_variables: FINV

   13 variables_locales: variables_locales cuerpo_declar_variables
   14                  | cuerpo_declar_variables

   15 cuerpo_declar_variables: TIPOSIMPLE lista_variables PYC
   16                        | TIPOSIMPLE lista_array PYC

   17 lista_variables: IDENTIFICADOR
   18                | lista_variables COMA IDENTIFICADOR

   19 lista_array: IDENTIFICADOR CORIZ dimension_array CORDER
   20            | lista_array COMA IDENTIFICADOR CORIZ dimension_array CORDER

   21 dimension_array: CONSTANTE_E
   22                | CONSTANTE_E COMA CONSTANTE_E

   23 cabecera_subprograma: PROCED IDENTIFICADOR PARIZ declar_parametros PARDER

   24 declar_parametros: param_simple
   25                  | param_array
   26                  | declar_parametros COMA param_simple
   27                  | declar_parametros COMA param_array

   28 param_simple: TIPOSIMPLE IDENTIFICADOR

   29 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ CORDER
   30            | TIPOSIMPLE IDENTIFICADOR CORIZ CORDER CORIZ CONSTANTE_E CORDER

   31 sentencias: sentencias sentencia
   32           | sentencia

   33 sentencia: bloque
   34          | sentencia_asignacion
   35          | sentencia_if
   36          | sentencia_while
   37          | sentencia_entrada
   38          | sentencia_salida
   39          | procedimiento
   40          | sentencia_case

   41 sentencia_asignacion: iden_array ASIG expresion PYC
   42                     | IDENTIFICADOR ASIG expresion PYC

   43 expresion: PARIZ expresion PARDER
   44          | OPU expresion
   45          | expresion OPBIG expresion
   46          | expresion OPBLOG expresion
   47          | expresion OPB expresion
   48          | expresion SUMA_RESTA expresion
   49          | iden_array
   50          | CONSTANTE
   51          | CONSTANTE_E
   52          | procedimiento
   53          | agregados

   54 iden_array: IDENTIFICADOR CORIZ expresion CORDER
   55           | IDENTIFICADOR CORIZ expresion COMA expresion CORDER

   56 procedimiento: IDENTIFICADOR PARIZ lista_expresiones PARDER

   57 agregados: INICIO lista_expresiones FINBLO

   58 lista_expresiones: expresion
   59                  | lista_expresiones COMA expresion

   60 sentencia_if: alternativa_doble
   61             | alternativa_simple

   62 alternativa_simple: IF expresion sentencia

   63 alternativa_doble: IF expresion sentencia ELSE sentencia

   64 sentencia_while: WHILE PARIZ expresion PARDER sentencia

   65 sentencia_entrada: nomb_entrada lista_variables

   66 nomb_entrada: READ

   67 sentencia_salida: nomb_salida PARIZ lista_expresiones_o_cadena PARDER

   68 nomb_salida: WRITE

   69 expresion_o_cadena: expresion
   70                   | CADENA

   71 lista_expresiones_o_cadena: expresion_o_cadena
   72                           | lista_expresiones_o_cadena COMA expresion_o_cadena

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER INICIO caso caso_por_defecto FINBLO

   74 caso: CASE opcion DOSP sentencia BREAK PYC caso
   75     | /* vacío */

   76 opcion: CONSTANTE_E
   77       | CARACTER

   78 caso_por_defecto: DEFAULT DOSP sentencia PYC
   79                 | /* vacío */


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
MAIN (258) 2
INICIO (259) 57 73
FINBLO (260) 57 73
INICIOV (261) 11
FINV (262) 12
PYC (263) 15 16 41 42 74 78
COMA (264) 18 20 22 26 27 55 59 72
TIPOSIMPLE (265) 15 16 28 29 30
PROCED (266) 23
CORIZ (267) 4 19 20 29 30 54 55
CORDER (268) 5 19 20 29 30 54 55
IF (269) 62 63
ELSE (270) 63
WHILE (271) 64
READ (272) 66
WRITE (273) 68
SWITCH (274) 73
CASE (275) 74
DEFAULT (276) 78
DOSP (277) 74 78
BREAK (278) 74
CONSTANTE (279) 50
PARDER (280) 23 43 56 64 67 73
PARIZ (281) 23 43 56 64 67 73
CADENA (282) 70
IDENTIFICADOR (283) 17 18 19 20 23 28 29 30 42 54 55 56 73
CONSTANTE_E (284) 21 22 30 51 76
CARACTER (285) 77
ASIG (286) 41 42
OPU (287) 44
OPBLOG (288) 46
OPBIG (289) 45
OPB (290) 47
SUMA_RESTA (291) 48


No terminales con las reglas donde aparecen

$accept (37)
    en la izquierda: 0
programa (38)
    en la izquierda: 1, en la derecha: 0
cabecera_programa (39)
    en la izquierda: 2, en la derecha: 1
bloque (40)
    en la izquierda: 3, en la derecha: 1 8 33
inicio_de_bloque (41)
    en la izquierda: 4, en la derecha: 3
fin_de_bloque (42)
    en la izquierda: 5, en la derecha: 3
declar_de_subprogs (43)
    en la izquierda: 6 7, en la derecha: 3 6
declar_subprog (44)
    en la izquierda: 8, en la derecha: 6
declar_de_variables_locales (45)
    en la izquierda: 9 10, en la derecha: 3
marca_ini_declar_variables (46)
    en la izquierda: 11, en la derecha: 9
marca_fin_declar_variables (47)
    en la izquierda: 12, en la derecha: 9
variables_locales (48)
    en la izquierda: 13 14, en la derecha: 9 13
cuerpo_declar_variables (49)
    en la izquierda: 15 16, en la derecha: 13 14
lista_variables (50)
    en la izquierda: 17 18, en la derecha: 15 18 65
lista_array (51)
    en la izquierda: 19 20, en la derecha: 16 20
dimension_array (52)
    en la izquierda: 21 22, en la derecha: 19 20
cabecera_subprograma (53)
    en la izquierda: 23, en la derecha: 8
declar_parametros (54)
    en la izquierda: 24 25 26 27, en la derecha: 23 26 27
param_simple (55)
    en la izquierda: 28, en la derecha: 24 26
param_array (56)
    en la izquierda: 29 30, en la derecha: 25 27
sentencias (57)
    en la izquierda: 31 32, en la derecha: 3 31
sentencia (58)
    en la izquierda: 33 34 35 36 37 38 39 40, en la derecha: 31 32
    62 63 64 74 78
sentencia_asignacion (59)
    en la izquierda: 41 42, en la derecha: 34
expresion (60)
    en la izquierda: 43 44 45 46 47 48 49 50 51 52 53, en la derecha:
    41 42 43 44 45 46 47 48 54 55 58 59 62 63 64 69
iden_array (61)
    en la izquierda: 54 55, en la derecha: 41 49
procedimiento (62)
    en la izquierda: 56, en la derecha: 39 52
agregados (63)
    en la izquierda: 57, en la derecha: 53
lista_expresiones (64)
    en la izquierda: 58 59, en la derecha: 56 57 59
sentencia_if (65)
    en la izquierda: 60 61, en la derecha: 35
alternativa_simple (66)
    en la izquierda: 62, en la derecha: 61
alternativa_doble (67)
    en la izquierda: 63, en la derecha: 60
sentencia_while (68)
    en la izquierda: 64, en la derecha: 36
sentencia_entrada (69)
    en la izquierda: 65, en la derecha: 37
nomb_entrada (70)
    en la izquierda: 66, en la derecha: 65
sentencia_salida (71)
    en la izquierda: 67, en la derecha: 38
nomb_salida (72)
    en la izquierda: 68, en la derecha: 67
expresion_o_cadena (73)
    en la izquierda: 69 70, en la derecha: 71 72
lista_expresiones_o_cadena (74)
    en la izquierda: 71 72, en la derecha: 67 72
sentencia_case (75)
    en la izquierda: 73, en la derecha: 40
caso (76)
    en la izquierda: 74 75, en la derecha: 73 74
opcion (77)
    en la izquierda: 76 77, en la derecha: 74
caso_por_defecto (78)
    en la izquierda: 78 79, en la derecha: 73


estado 0

    0 $accept: . programa $end

    MAIN  desplazar e ir al estado 1

    programa           ir al estado 2
    cabecera_programa  ir al estado 3


estado 1

    2 cabecera_programa: MAIN .

    $default  reduce usando la regla 2 (cabecera_programa)


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


estado 3

    1 programa: cabecera_programa . bloque

    CORIZ  desplazar e ir al estado 5

    bloque            ir al estado 6
    inicio_de_bloque  ir al estado 7


estado 4

    0 $accept: programa $end .

    $default  aceptar


estado 5

    4 inicio_de_bloque: CORIZ .

    $default  reduce usando la regla 4 (inicio_de_bloque)


estado 6

    1 programa: cabecera_programa bloque .

    $default  reduce usando la regla 1 (programa)


estado 7

    3 bloque: inicio_de_bloque . declar_de_variables_locales declar_de_subprogs sentencias fin_de_bloque

    INICIOV  desplazar e ir al estado 8

    $default  reduce usando la regla 10 (declar_de_variables_locales)

    declar_de_variables_locales  ir al estado 9
    marca_ini_declar_variables   ir al estado 10


estado 8

   11 marca_ini_declar_variables: INICIOV .

    $default  reduce usando la regla 11 (marca_ini_declar_variables)


estado 9

    3 bloque: inicio_de_bloque declar_de_variables_locales . declar_de_subprogs sentencias fin_de_bloque

    $default  reduce usando la regla 7 (declar_de_subprogs)

    declar_de_subprogs  ir al estado 11


estado 10

    9 declar_de_variables_locales: marca_ini_declar_variables . variables_locales marca_fin_declar_variables

    TIPOSIMPLE  desplazar e ir al estado 12

    variables_locales        ir al estado 13
    cuerpo_declar_variables  ir al estado 14


estado 11

    3 bloque: inicio_de_bloque declar_de_variables_locales declar_de_subprogs . sentencias fin_de_bloque
    6 declar_de_subprogs: declar_de_subprogs . declar_subprog

    PROCED         desplazar e ir al estado 15
    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    declar_subprog        ir al estado 23
    cabecera_subprograma  ir al estado 24
    sentencias            ir al estado 25
    sentencia             ir al estado 26
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 12

   15 cuerpo_declar_variables: TIPOSIMPLE . lista_variables PYC
   16                        | TIPOSIMPLE . lista_array PYC

    IDENTIFICADOR  desplazar e ir al estado 39

    lista_variables  ir al estado 40
    lista_array      ir al estado 41


estado 13

    9 declar_de_variables_locales: marca_ini_declar_variables variables_locales . marca_fin_declar_variables
   13 variables_locales: variables_locales . cuerpo_declar_variables

    FINV        desplazar e ir al estado 42
    TIPOSIMPLE  desplazar e ir al estado 12

    marca_fin_declar_variables  ir al estado 43
    cuerpo_declar_variables     ir al estado 44


estado 14

   14 variables_locales: cuerpo_declar_variables .

    $default  reduce usando la regla 14 (variables_locales)


estado 15

   23 cabecera_subprograma: PROCED . IDENTIFICADOR PARIZ declar_parametros PARDER

    IDENTIFICADOR  desplazar e ir al estado 45


estado 16

   62 alternativa_simple: IF . expresion sentencia
   63 alternativa_doble: IF . expresion sentencia ELSE sentencia

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 52
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 17

   64 sentencia_while: WHILE . PARIZ expresion PARDER sentencia

    PARIZ  desplazar e ir al estado 56


estado 18

   66 nomb_entrada: READ .

    $default  reduce usando la regla 66 (nomb_entrada)


estado 19

   68 nomb_salida: WRITE .

    $default  reduce usando la regla 68 (nomb_salida)


estado 20

   73 sentencia_case: SWITCH . PARIZ IDENTIFICADOR PARDER INICIO caso caso_por_defecto FINBLO

    PARIZ  desplazar e ir al estado 57


estado 21

   42 sentencia_asignacion: IDENTIFICADOR . ASIG expresion PYC
   54 iden_array: IDENTIFICADOR . CORIZ expresion CORDER
   55           | IDENTIFICADOR . CORIZ expresion COMA expresion CORDER
   56 procedimiento: IDENTIFICADOR . PARIZ lista_expresiones PARDER

    CORIZ  desplazar e ir al estado 58
    PARIZ  desplazar e ir al estado 59
    ASIG   desplazar e ir al estado 60


estado 22

   33 sentencia: bloque .

    $default  reduce usando la regla 33 (sentencia)


estado 23

    6 declar_de_subprogs: declar_de_subprogs declar_subprog .

    $default  reduce usando la regla 6 (declar_de_subprogs)


estado 24

    8 declar_subprog: cabecera_subprograma . bloque

    CORIZ  desplazar e ir al estado 5

    bloque            ir al estado 61
    inicio_de_bloque  ir al estado 7


estado 25

    3 bloque: inicio_de_bloque declar_de_variables_locales declar_de_subprogs sentencias . fin_de_bloque
   31 sentencias: sentencias . sentencia

    CORIZ          desplazar e ir al estado 5
    CORDER         desplazar e ir al estado 62
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    fin_de_bloque         ir al estado 63
    sentencia             ir al estado 64
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 26

   32 sentencias: sentencia .

    $default  reduce usando la regla 32 (sentencias)


estado 27

   34 sentencia: sentencia_asignacion .

    $default  reduce usando la regla 34 (sentencia)


estado 28

   41 sentencia_asignacion: iden_array . ASIG expresion PYC

    ASIG  desplazar e ir al estado 65


estado 29

   39 sentencia: procedimiento .

    $default  reduce usando la regla 39 (sentencia)


estado 30

   35 sentencia: sentencia_if .

    $default  reduce usando la regla 35 (sentencia)


estado 31

   61 sentencia_if: alternativa_simple .

    $default  reduce usando la regla 61 (sentencia_if)


estado 32

   60 sentencia_if: alternativa_doble .

    $default  reduce usando la regla 60 (sentencia_if)


estado 33

   36 sentencia: sentencia_while .

    $default  reduce usando la regla 36 (sentencia)


estado 34

   37 sentencia: sentencia_entrada .

    $default  reduce usando la regla 37 (sentencia)


estado 35

   65 sentencia_entrada: nomb_entrada . lista_variables

    IDENTIFICADOR  desplazar e ir al estado 66

    lista_variables  ir al estado 67


estado 36

   38 sentencia: sentencia_salida .

    $default  reduce usando la regla 38 (sentencia)


estado 37

   67 sentencia_salida: nomb_salida . PARIZ lista_expresiones_o_cadena PARDER

    PARIZ  desplazar e ir al estado 68


estado 38

   40 sentencia: sentencia_case .

    $default  reduce usando la regla 40 (sentencia)


estado 39

   17 lista_variables: IDENTIFICADOR .
   19 lista_array: IDENTIFICADOR . CORIZ dimension_array CORDER

    CORIZ  desplazar e ir al estado 69

    $default  reduce usando la regla 17 (lista_variables)


estado 40

   15 cuerpo_declar_variables: TIPOSIMPLE lista_variables . PYC
   18 lista_variables: lista_variables . COMA IDENTIFICADOR

    PYC   desplazar e ir al estado 70
    COMA  desplazar e ir al estado 71


estado 41

   16 cuerpo_declar_variables: TIPOSIMPLE lista_array . PYC
   20 lista_array: lista_array . COMA IDENTIFICADOR CORIZ dimension_array CORDER

    PYC   desplazar e ir al estado 72
    COMA  desplazar e ir al estado 73


estado 42

   12 marca_fin_declar_variables: FINV .

    $default  reduce usando la regla 12 (marca_fin_declar_variables)


estado 43

    9 declar_de_variables_locales: marca_ini_declar_variables variables_locales marca_fin_declar_variables .

    $default  reduce usando la regla 9 (declar_de_variables_locales)


estado 44

   13 variables_locales: variables_locales cuerpo_declar_variables .

    $default  reduce usando la regla 13 (variables_locales)


estado 45

   23 cabecera_subprograma: PROCED IDENTIFICADOR . PARIZ declar_parametros PARDER

    PARIZ  desplazar e ir al estado 74


estado 46

   57 agregados: INICIO . lista_expresiones FINBLO

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion          ir al estado 75
    iden_array         ir al estado 53
    procedimiento      ir al estado 54
    agregados          ir al estado 55
    lista_expresiones  ir al estado 76


estado 47

   50 expresion: CONSTANTE .

    $default  reduce usando la regla 50 (expresion)


estado 48

   43 expresion: PARIZ . expresion PARDER

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 77
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 49

   54 iden_array: IDENTIFICADOR . CORIZ expresion CORDER
   55           | IDENTIFICADOR . CORIZ expresion COMA expresion CORDER
   56 procedimiento: IDENTIFICADOR . PARIZ lista_expresiones PARDER

    CORIZ  desplazar e ir al estado 58
    PARIZ  desplazar e ir al estado 59


estado 50

   51 expresion: CONSTANTE_E .

    $default  reduce usando la regla 51 (expresion)


estado 51

   44 expresion: OPU . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 78
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 52

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   62 alternativa_simple: IF expresion . sentencia
   63 alternativa_doble: IF expresion . sentencia ELSE sentencia

    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21
    OPBLOG         desplazar e ir al estado 79
    OPBIG          desplazar e ir al estado 80
    OPB            desplazar e ir al estado 81
    SUMA_RESTA     desplazar e ir al estado 82

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    sentencia             ir al estado 83
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 53

   49 expresion: iden_array .

    $default  reduce usando la regla 49 (expresion)


estado 54

   52 expresion: procedimiento .

    $default  reduce usando la regla 52 (expresion)


estado 55

   53 expresion: agregados .

    $default  reduce usando la regla 53 (expresion)


estado 56

   64 sentencia_while: WHILE PARIZ . expresion PARDER sentencia

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 84
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 57

   73 sentencia_case: SWITCH PARIZ . IDENTIFICADOR PARDER INICIO caso caso_por_defecto FINBLO

    IDENTIFICADOR  desplazar e ir al estado 85


estado 58

   54 iden_array: IDENTIFICADOR CORIZ . expresion CORDER
   55           | IDENTIFICADOR CORIZ . expresion COMA expresion CORDER

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 86
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 59

   56 procedimiento: IDENTIFICADOR PARIZ . lista_expresiones PARDER

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion          ir al estado 75
    iden_array         ir al estado 53
    procedimiento      ir al estado 54
    agregados          ir al estado 55
    lista_expresiones  ir al estado 87


estado 60

   42 sentencia_asignacion: IDENTIFICADOR ASIG . expresion PYC

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 88
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 61

    8 declar_subprog: cabecera_subprograma bloque .

    $default  reduce usando la regla 8 (declar_subprog)


estado 62

    5 fin_de_bloque: CORDER .

    $default  reduce usando la regla 5 (fin_de_bloque)


estado 63

    3 bloque: inicio_de_bloque declar_de_variables_locales declar_de_subprogs sentencias fin_de_bloque .

    $default  reduce usando la regla 3 (bloque)


estado 64

   31 sentencias: sentencias sentencia .

    $default  reduce usando la regla 31 (sentencias)


estado 65

   41 sentencia_asignacion: iden_array ASIG . expresion PYC

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 89
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 66

   17 lista_variables: IDENTIFICADOR .

    $default  reduce usando la regla 17 (lista_variables)


estado 67

   18 lista_variables: lista_variables . COMA IDENTIFICADOR
   65 sentencia_entrada: nomb_entrada lista_variables .

    COMA  desplazar e ir al estado 71

    $default  reduce usando la regla 65 (sentencia_entrada)


estado 68

   67 sentencia_salida: nomb_salida PARIZ . lista_expresiones_o_cadena PARDER

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    CADENA         desplazar e ir al estado 90
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion                   ir al estado 91
    iden_array                  ir al estado 53
    procedimiento               ir al estado 54
    agregados                   ir al estado 55
    expresion_o_cadena          ir al estado 92
    lista_expresiones_o_cadena  ir al estado 93


estado 69

   19 lista_array: IDENTIFICADOR CORIZ . dimension_array CORDER

    CONSTANTE_E  desplazar e ir al estado 94

    dimension_array  ir al estado 95


estado 70

   15 cuerpo_declar_variables: TIPOSIMPLE lista_variables PYC .

    $default  reduce usando la regla 15 (cuerpo_declar_variables)


estado 71

   18 lista_variables: lista_variables COMA . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 96


estado 72

   16 cuerpo_declar_variables: TIPOSIMPLE lista_array PYC .

    $default  reduce usando la regla 16 (cuerpo_declar_variables)


estado 73

   20 lista_array: lista_array COMA . IDENTIFICADOR CORIZ dimension_array CORDER

    IDENTIFICADOR  desplazar e ir al estado 97


estado 74

   23 cabecera_subprograma: PROCED IDENTIFICADOR PARIZ . declar_parametros PARDER

    TIPOSIMPLE  desplazar e ir al estado 98

    declar_parametros  ir al estado 99
    param_simple       ir al estado 100
    param_array        ir al estado 101


estado 75

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   58 lista_expresiones: expresion .

    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 58 (lista_expresiones)


estado 76

   57 agregados: INICIO lista_expresiones . FINBLO
   59 lista_expresiones: lista_expresiones . COMA expresion

    FINBLO  desplazar e ir al estado 102
    COMA    desplazar e ir al estado 103


estado 77

   43 expresion: PARIZ expresion . PARDER
   45          | expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    PARDER      desplazar e ir al estado 104
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 78

   44 expresion: OPU expresion .
   45          | expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 44 (expresion)


estado 79

   46 expresion: expresion OPBLOG . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 105
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 80

   45 expresion: expresion OPBIG . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 106
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 81

   47 expresion: expresion OPB . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 107
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 82

   48 expresion: expresion SUMA_RESTA . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 108
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 83

   62 alternativa_simple: IF expresion sentencia .
   63 alternativa_doble: IF expresion sentencia . ELSE sentencia

    ELSE  desplazar e ir al estado 109

    ELSE      [reduce usando la regla 62 (alternativa_simple)]
    $default  reduce usando la regla 62 (alternativa_simple)


estado 84

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   64 sentencia_while: WHILE PARIZ expresion . PARDER sentencia

    PARDER      desplazar e ir al estado 110
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 85

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR . PARDER INICIO caso caso_por_defecto FINBLO

    PARDER  desplazar e ir al estado 111


estado 86

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   54 iden_array: IDENTIFICADOR CORIZ expresion . CORDER
   55           | IDENTIFICADOR CORIZ expresion . COMA expresion CORDER

    COMA        desplazar e ir al estado 112
    CORDER      desplazar e ir al estado 113
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 87

   56 procedimiento: IDENTIFICADOR PARIZ lista_expresiones . PARDER
   59 lista_expresiones: lista_expresiones . COMA expresion

    COMA    desplazar e ir al estado 103
    PARDER  desplazar e ir al estado 114


estado 88

   42 sentencia_asignacion: IDENTIFICADOR ASIG expresion . PYC
   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    PYC         desplazar e ir al estado 115
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 89

   41 sentencia_asignacion: iden_array ASIG expresion . PYC
   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    PYC         desplazar e ir al estado 116
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 90

   70 expresion_o_cadena: CADENA .

    $default  reduce usando la regla 70 (expresion_o_cadena)


estado 91

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   69 expresion_o_cadena: expresion .

    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 69 (expresion_o_cadena)


estado 92

   71 lista_expresiones_o_cadena: expresion_o_cadena .

    $default  reduce usando la regla 71 (lista_expresiones_o_cadena)


estado 93

   67 sentencia_salida: nomb_salida PARIZ lista_expresiones_o_cadena . PARDER
   72 lista_expresiones_o_cadena: lista_expresiones_o_cadena . COMA expresion_o_cadena

    COMA    desplazar e ir al estado 117
    PARDER  desplazar e ir al estado 118


estado 94

   21 dimension_array: CONSTANTE_E .
   22                | CONSTANTE_E . COMA CONSTANTE_E

    COMA  desplazar e ir al estado 119

    $default  reduce usando la regla 21 (dimension_array)


estado 95

   19 lista_array: IDENTIFICADOR CORIZ dimension_array . CORDER

    CORDER  desplazar e ir al estado 120


estado 96

   18 lista_variables: lista_variables COMA IDENTIFICADOR .

    $default  reduce usando la regla 18 (lista_variables)


estado 97

   20 lista_array: lista_array COMA IDENTIFICADOR . CORIZ dimension_array CORDER

    CORIZ  desplazar e ir al estado 121


estado 98

   28 param_simple: TIPOSIMPLE . IDENTIFICADOR
   29 param_array: TIPOSIMPLE . IDENTIFICADOR CORIZ CORDER
   30            | TIPOSIMPLE . IDENTIFICADOR CORIZ CORDER CORIZ CONSTANTE_E CORDER

    IDENTIFICADOR  desplazar e ir al estado 122


estado 99

   23 cabecera_subprograma: PROCED IDENTIFICADOR PARIZ declar_parametros . PARDER
   26 declar_parametros: declar_parametros . COMA param_simple
   27                  | declar_parametros . COMA param_array

    COMA    desplazar e ir al estado 123
    PARDER  desplazar e ir al estado 124


estado 100

   24 declar_parametros: param_simple .

    $default  reduce usando la regla 24 (declar_parametros)


estado 101

   25 declar_parametros: param_array .

    $default  reduce usando la regla 25 (declar_parametros)


estado 102

   57 agregados: INICIO lista_expresiones FINBLO .

    $default  reduce usando la regla 57 (agregados)


estado 103

   59 lista_expresiones: lista_expresiones COMA . expresion

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 125
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 104

   43 expresion: PARIZ expresion PARDER .

    $default  reduce usando la regla 43 (expresion)


estado 105

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   46          | expresion OPBLOG expresion .
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 46 (expresion)


estado 106

   45 expresion: expresion . OPBIG expresion
   45          | expresion OPBIG expresion .
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion

    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 45 (expresion)


estado 107

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   47          | expresion OPB expresion .
   48          | expresion . SUMA_RESTA expresion

    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 47 (expresion)


estado 108

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   48          | expresion SUMA_RESTA expresion .

    $default  reduce usando la regla 48 (expresion)


estado 109

   63 alternativa_doble: IF expresion sentencia ELSE . sentencia

    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    sentencia             ir al estado 126
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 110

   64 sentencia_while: WHILE PARIZ expresion PARDER . sentencia

    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    sentencia             ir al estado 127
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 111

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER . INICIO caso caso_por_defecto FINBLO

    INICIO  desplazar e ir al estado 128


estado 112

   55 iden_array: IDENTIFICADOR CORIZ expresion COMA . expresion CORDER

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion      ir al estado 129
    iden_array     ir al estado 53
    procedimiento  ir al estado 54
    agregados      ir al estado 55


estado 113

   54 iden_array: IDENTIFICADOR CORIZ expresion CORDER .

    $default  reduce usando la regla 54 (iden_array)


estado 114

   56 procedimiento: IDENTIFICADOR PARIZ lista_expresiones PARDER .

    $default  reduce usando la regla 56 (procedimiento)


estado 115

   42 sentencia_asignacion: IDENTIFICADOR ASIG expresion PYC .

    $default  reduce usando la regla 42 (sentencia_asignacion)


estado 116

   41 sentencia_asignacion: iden_array ASIG expresion PYC .

    $default  reduce usando la regla 41 (sentencia_asignacion)


estado 117

   72 lista_expresiones_o_cadena: lista_expresiones_o_cadena COMA . expresion_o_cadena

    INICIO         desplazar e ir al estado 46
    CONSTANTE      desplazar e ir al estado 47
    PARIZ          desplazar e ir al estado 48
    CADENA         desplazar e ir al estado 90
    IDENTIFICADOR  desplazar e ir al estado 49
    CONSTANTE_E    desplazar e ir al estado 50
    OPU            desplazar e ir al estado 51

    expresion           ir al estado 91
    iden_array          ir al estado 53
    procedimiento       ir al estado 54
    agregados           ir al estado 55
    expresion_o_cadena  ir al estado 130


estado 118

   67 sentencia_salida: nomb_salida PARIZ lista_expresiones_o_cadena PARDER .

    $default  reduce usando la regla 67 (sentencia_salida)


estado 119

   22 dimension_array: CONSTANTE_E COMA . CONSTANTE_E

    CONSTANTE_E  desplazar e ir al estado 131


estado 120

   19 lista_array: IDENTIFICADOR CORIZ dimension_array CORDER .

    $default  reduce usando la regla 19 (lista_array)


estado 121

   20 lista_array: lista_array COMA IDENTIFICADOR CORIZ . dimension_array CORDER

    CONSTANTE_E  desplazar e ir al estado 94

    dimension_array  ir al estado 132


estado 122

   28 param_simple: TIPOSIMPLE IDENTIFICADOR .
   29 param_array: TIPOSIMPLE IDENTIFICADOR . CORIZ CORDER
   30            | TIPOSIMPLE IDENTIFICADOR . CORIZ CORDER CORIZ CONSTANTE_E CORDER

    CORIZ  desplazar e ir al estado 133

    $default  reduce usando la regla 28 (param_simple)


estado 123

   26 declar_parametros: declar_parametros COMA . param_simple
   27                  | declar_parametros COMA . param_array

    TIPOSIMPLE  desplazar e ir al estado 98

    param_simple  ir al estado 134
    param_array   ir al estado 135


estado 124

   23 cabecera_subprograma: PROCED IDENTIFICADOR PARIZ declar_parametros PARDER .

    $default  reduce usando la regla 23 (cabecera_subprograma)


estado 125

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   59 lista_expresiones: lista_expresiones COMA expresion .

    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82

    $default  reduce usando la regla 59 (lista_expresiones)


estado 126

   63 alternativa_doble: IF expresion sentencia ELSE sentencia .

    $default  reduce usando la regla 63 (alternativa_doble)


estado 127

   64 sentencia_while: WHILE PARIZ expresion PARDER sentencia .

    $default  reduce usando la regla 64 (sentencia_while)


estado 128

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER INICIO . caso caso_por_defecto FINBLO

    CASE  desplazar e ir al estado 136

    $default  reduce usando la regla 75 (caso)

    caso  ir al estado 137


estado 129

   45 expresion: expresion . OPBIG expresion
   46          | expresion . OPBLOG expresion
   47          | expresion . OPB expresion
   48          | expresion . SUMA_RESTA expresion
   55 iden_array: IDENTIFICADOR CORIZ expresion COMA expresion . CORDER

    CORDER      desplazar e ir al estado 138
    OPBLOG      desplazar e ir al estado 79
    OPBIG       desplazar e ir al estado 80
    OPB         desplazar e ir al estado 81
    SUMA_RESTA  desplazar e ir al estado 82


estado 130

   72 lista_expresiones_o_cadena: lista_expresiones_o_cadena COMA expresion_o_cadena .

    $default  reduce usando la regla 72 (lista_expresiones_o_cadena)


estado 131

   22 dimension_array: CONSTANTE_E COMA CONSTANTE_E .

    $default  reduce usando la regla 22 (dimension_array)


estado 132

   20 lista_array: lista_array COMA IDENTIFICADOR CORIZ dimension_array . CORDER

    CORDER  desplazar e ir al estado 139


estado 133

   29 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ . CORDER
   30            | TIPOSIMPLE IDENTIFICADOR CORIZ . CORDER CORIZ CONSTANTE_E CORDER

    CORDER  desplazar e ir al estado 140


estado 134

   26 declar_parametros: declar_parametros COMA param_simple .

    $default  reduce usando la regla 26 (declar_parametros)


estado 135

   27 declar_parametros: declar_parametros COMA param_array .

    $default  reduce usando la regla 27 (declar_parametros)


estado 136

   74 caso: CASE . opcion DOSP sentencia BREAK PYC caso

    CONSTANTE_E  desplazar e ir al estado 141
    CARACTER     desplazar e ir al estado 142

    opcion  ir al estado 143


estado 137

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER INICIO caso . caso_por_defecto FINBLO

    DEFAULT  desplazar e ir al estado 144

    $default  reduce usando la regla 79 (caso_por_defecto)

    caso_por_defecto  ir al estado 145


estado 138

   55 iden_array: IDENTIFICADOR CORIZ expresion COMA expresion CORDER .

    $default  reduce usando la regla 55 (iden_array)


estado 139

   20 lista_array: lista_array COMA IDENTIFICADOR CORIZ dimension_array CORDER .

    $default  reduce usando la regla 20 (lista_array)


estado 140

   29 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ CORDER .
   30            | TIPOSIMPLE IDENTIFICADOR CORIZ CORDER . CORIZ CONSTANTE_E CORDER

    CORIZ  desplazar e ir al estado 146

    $default  reduce usando la regla 29 (param_array)


estado 141

   76 opcion: CONSTANTE_E .

    $default  reduce usando la regla 76 (opcion)


estado 142

   77 opcion: CARACTER .

    $default  reduce usando la regla 77 (opcion)


estado 143

   74 caso: CASE opcion . DOSP sentencia BREAK PYC caso

    DOSP  desplazar e ir al estado 147


estado 144

   78 caso_por_defecto: DEFAULT . DOSP sentencia PYC

    DOSP  desplazar e ir al estado 148


estado 145

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER INICIO caso caso_por_defecto . FINBLO

    FINBLO  desplazar e ir al estado 149


estado 146

   30 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ CORDER CORIZ . CONSTANTE_E CORDER

    CONSTANTE_E  desplazar e ir al estado 150


estado 147

   74 caso: CASE opcion DOSP . sentencia BREAK PYC caso

    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    sentencia             ir al estado 151
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 148

   78 caso_por_defecto: DEFAULT DOSP . sentencia PYC

    CORIZ          desplazar e ir al estado 5
    IF             desplazar e ir al estado 16
    WHILE          desplazar e ir al estado 17
    READ           desplazar e ir al estado 18
    WRITE          desplazar e ir al estado 19
    SWITCH         desplazar e ir al estado 20
    IDENTIFICADOR  desplazar e ir al estado 21

    bloque                ir al estado 22
    inicio_de_bloque      ir al estado 7
    sentencia             ir al estado 152
    sentencia_asignacion  ir al estado 27
    iden_array            ir al estado 28
    procedimiento         ir al estado 29
    sentencia_if          ir al estado 30
    alternativa_simple    ir al estado 31
    alternativa_doble     ir al estado 32
    sentencia_while       ir al estado 33
    sentencia_entrada     ir al estado 34
    nomb_entrada          ir al estado 35
    sentencia_salida      ir al estado 36
    nomb_salida           ir al estado 37
    sentencia_case        ir al estado 38


estado 149

   73 sentencia_case: SWITCH PARIZ IDENTIFICADOR PARDER INICIO caso caso_por_defecto FINBLO .

    $default  reduce usando la regla 73 (sentencia_case)


estado 150

   30 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ CORDER CORIZ CONSTANTE_E . CORDER

    CORDER  desplazar e ir al estado 153


estado 151

   74 caso: CASE opcion DOSP sentencia . BREAK PYC caso

    BREAK  desplazar e ir al estado 154


estado 152

   78 caso_por_defecto: DEFAULT DOSP sentencia . PYC

    PYC  desplazar e ir al estado 155


estado 153

   30 param_array: TIPOSIMPLE IDENTIFICADOR CORIZ CORDER CORIZ CONSTANTE_E CORDER .

    $default  reduce usando la regla 30 (param_array)


estado 154

   74 caso: CASE opcion DOSP sentencia BREAK . PYC caso

    PYC  desplazar e ir al estado 156


estado 155

   78 caso_por_defecto: DEFAULT DOSP sentencia PYC .

    $default  reduce usando la regla 78 (caso_por_defecto)


estado 156

   74 caso: CASE opcion DOSP sentencia BREAK PYC . caso

    CASE  desplazar e ir al estado 136

    $default  reduce usando la regla 75 (caso)

    caso  ir al estado 157


estado 157

   74 caso: CASE opcion DOSP sentencia BREAK PYC caso .

    $default  reduce usando la regla 74 (caso)
